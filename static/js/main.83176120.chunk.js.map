{"version":3,"sources":["components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/app.js","index.js"],"names":["TodoListItem","state","done","onLabelClick","setState","this","props","label","onDeleted","classNames","className","onClick","type","Component","TodoList","items","onDelete","elements","map","item","id","itemProps","key","SearchPanel","term","onTermChange","e","onSearchChange","target","value","placeholder","onChange","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","important","filter","search","createItem","toggleProperty","arr","propName","idx","findIndex","slice","onFilterChange","length","toLowerCase","indexOf","visibleItems","searchItems","filterItems","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.83176120.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n  state = {\r\n    done: false,\r\n  };\r\n\r\n  onLabelClick = () => {\r\n    this.setState(({done}) => {\r\n      return {\r\n        done: !done\r\n        \r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { label, onDeleted } = this.props;\r\n    const { done } = this.state;\r\n\r\n    let classNames = 'todo-list-item';\r\n    if (done) {\r\n      classNames += ' done';\r\n    }\r\n    return (\r\n      <span className={classNames}>\r\n        <span\r\n          className=\"todo-list-item-label\"\r\n          onClick={ this.onLabelClick }>\r\n          {label}\r\n        </span>\r\n        <button type=\"button\"\r\n          className=\"btn btn-outline-danger btn-sm float-right\"\r\n          onClick={onDeleted}>\r\n          Delete\r\n        </button>\r\n      </span>\r\n    );\r\n  };\r\n}\r\n\r\n","import TodoList from './todo-list'\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item/todo-list-item';\r\n\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ items, onDelete }) => {\r\n\r\n  const elements = items.map((item) => {\r\n    const { id, ...itemProps } = item;\r\n    return (\r\n      <li key={id} className=\"list-group-item\">\r\n        <TodoListItem\r\n          { ...itemProps }\r\n          onDelete={ () => onDelete(id) } />\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (<ul className=\"todo-list list-group\">{ elements }</ul>);\r\n};\r\n\r\nexport default TodoList;\r\n","import SearchPanel from './search-panel'\r\n\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n  state = {\r\n    term: ''\r\n  };\r\n\r\n  onTermChange = (e) => {\r\n    const {onSearchChange = () => {}} = this.props;\r\n    this.setState({\r\n      term: e.target.value\r\n    });\r\n\r\n    onSearchChange(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <input type=\"text\"\r\n             className=\"form-control search-input\"\r\n             placeholder=\"Enter task name to search...\"\r\n             value={this.state.term}\r\n             onChange={ this.onTermChange } />\r\n    );\r\n  };\r\n}\r\n","import ItemAddForm from './item-add-form'\r\n\r\nexport default ItemAddForm;","import React, { Component } from 'react';\r\n\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n  state = {\r\n    label: ''\r\n  };\r\n\r\n  onLabelChange = (e) => {\r\n    this.setState({\r\n      label: e.target.value\r\n    })\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { label } = this.state;\r\n    this.setState({ label: '' });\r\n    const cb = this.props.onItemAdded || (() => {});\r\n    cb(label);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className=\"bottom-panel d-flex\"\r\n        onSubmit={this.onSubmit}>\r\n\r\n        <input type=\"text\"\r\n               className=\"form-control new-todo-label\"\r\n               value={this.state.label}\r\n               onChange={this.onLabelChange}\r\n               placeholder=\"Enter task and press Add Task button\" />\r\n\r\n        <button type=\"submit\"\r\n                className=\"btn btn-outline-secondary\">Add</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport TodoList from '../todo-list';\r\nimport SearchPanel from '../search-panel';\r\nimport ItemAddForm from '../item-add-form';\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n  maxId = 100;\r\n\r\n  state = {\r\n    items: [\r\n      { id: 1, label: 'Learn English', important: false, done: false },\r\n      { id: 2, label: 'Make a homework', important: true, done: false },\r\n      { id: 3, label: 'Learn react', important: false, done: false }\r\n    ],\r\n    filter: 'all',\r\n    search: ''\r\n  };\r\n\r\n  onItemAdded = (label) => {\r\n    this.setState((state) => {\r\n      const item = this.createItem(label);\r\n      return { items: [...state.items, item] };\r\n    })\r\n  };\r\n\r\n  toggleProperty = (arr, id, propName) => {\r\n    const idx = arr.findIndex((item) => item.id === id);\r\n    const oldItem = arr[idx];\r\n    const value = !oldItem[propName];\r\n\r\n    const item = { ...arr[idx], [propName]: value } ;\r\n    return [\r\n      ...arr.slice(0, idx),\r\n      item,\r\n      ...arr.slice(idx + 1)\r\n    ];\r\n  };\r\n  \r\n  onDelete = (id) => {\r\n    this.setState((state) => {\r\n      const idx = state.items.findIndex((item) => item.id === id);\r\n      const items = [\r\n        ...state.items.slice(0, idx),\r\n        ...state.items.slice(idx + 1)\r\n      ];\r\n      return { items };\r\n    });\r\n  };\r\n\r\n  onFilterChange = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  onSearchChange = (search) => {\r\n    this.setState({ search });\r\n  };\r\n\r\n  createItem(label) {\r\n    return {\r\n      id: ++this.maxId,\r\n      label,\r\n      important: false,\r\n      done: false\r\n    };\r\n  }\r\n\r\n  filterItems(items, filter) {\r\n    if (filter === 'all') {\r\n      return items;\r\n    } else if (filter === 'active') {\r\n      return items.filter((item) => (!item.done));\r\n    } else if (filter === 'done') {\r\n      return items.filter((item) => item.done);\r\n    }\r\n  }\r\n\r\n  searchItems(items, search) {\r\n    if (search.length === 0) {\r\n      return items;\r\n    }\r\n\r\n    return items.filter((item) => {\r\n      return item.label.toLowerCase().indexOf(search.toLowerCase()) > -1;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { items, filter, search } = this.state;\r\n    const visibleItems = this.searchItems(this.filterItems(items, filter), search);\r\n\r\n    return (\r\n      <div className=\"todo-app\">\r\n        <div className=\"search-panel d-flex\">\r\n          <SearchPanel\r\n            onSearchChange={this.onSearchChange}/>\r\n        </div>\r\n        <TodoList\r\n          items={ visibleItems }\r\n          onDelete={this.onDelete} />\r\n\r\n        <ItemAddForm\r\n          onItemAdded={this.onItemAdded} />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app'\n\nReactDOM.render(<App/>,document.getElementById('root') )"],"sourceRoot":""}